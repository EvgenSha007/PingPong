from pygame import *

class GameSprite(sprite.Sprite):
    def __init__(self, image1, player_x, player_y, player_speed, w, h):
        super().__init__()
        self.image = transform.scale(image.load(image1), (w, h)) 
        self.speed = player_speed
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player(GameSprite):
    def update1(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 0:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < 400:
            self.rect.y += self.speed

    def update2(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 0:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < 400:
            self.rect.y += self.speed

window = display.set_mode((700, 500))
window.fill((50, 150, 250))

game = True 
clock = time.Clock()
FPS = 60

lefter = Player("rack.png", 10, 200, 10, 10, 100)
righter = Player("rack.png", 680, 400, 10, 10, 100)
ball = GameSprite("ball.png", 350, 150, 5, 30, 30)
font.init()
font = font.SysFont('Arial', 35)
lose = font.render("Игрок1 победил!", True, (255, 0, 0))
win = font.render("Игрок2 победил!", True, (0, 255, 0))

s1 = 3
s2 = 3

finish = True
while game:

    for e in event.get():
        if e.type == QUIT:
            game = False

    if finish:
        window.fill((50, 150, 250))
        lefter.update1()
        lefter.reset()
        righter.update2()
        righter.reset()
        ball.reset()

        if ball.rect.y > 470 or ball.rect.y < 0:
            s2 *= -1

        if sprite.collide_rect(lefter, ball) or sprite.collide_rect(righter, ball):
            s1 *= -1

        if ball.rect.x < 0:
            window.blit(win, (250, 200))
            display.update()
            finish = False
        
        if ball.rect.x > 700:
            window.blit(lose, (250, 200))
            display.update()
            finish = False



        ball.rect.x += s1
        ball.rect.y += s2


        clock.tick(FPS)
        display.update()
    
    
